#include<iostream>
using namespace std;

//构造函数和析构函数的复习

class Time
{
public:
	Time()
	{
		cout << "Time" << endl;
	}
	~Time()
	{
		cout << "Time" << endl;
	}
private:

};
class Date
{
public:
	Date(int year = 0, int month = 1, int day = 1)
	{
		_year = year;
		_month = month;
		_day = day;	
		cout << "Date" << " " << this << endl;//this是为了看地址，来确认d1、d2构造析构的顺序
	}
	~Date()
	{
		cout << "~Date" << " " << this << endl;
	}
private:
	int _year;
	int _month;
	int _day;//调用默认构造函数时，对于基本类型不处理

	Time _t;//对于自定义类型，会初始化一下，就是会调用一遍自定义类型的构造函数和析构函数
};

class Stack
{
public:
	Stack(int n = 10)
	{
		_a = (int*)malloc(sizeof(int) * n);
		_size = 0;
		_capacity = n;
	}
	~Stack()       //析构是为了动态清理，动态开辟的，fopen文件打开的，指针，进程的资源是有上限的，要释放掉
	{
		if (_a)
		{
			free(_a);
			_a = nullptr;
			_size = _capacity = 0;
		}
	}
	void Push(int x);
	void Pop();
	size_t Size();
	//...
private:
	int* _a;
	int _size;
	int _capacity;
};
int main()
{
	Date d1;//无参不能写括号
	Date d2;

	//Stack s1;

	return 0;
}
